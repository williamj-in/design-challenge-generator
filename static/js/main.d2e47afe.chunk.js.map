{"version":3,"sources":["logo.svg","Data.js","Footer.js","NoteCard.js","Notes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","nouns","users","useStyles","makeStyles","root","width","appBar","top","bottom","boxShadow","Footer","styled","div","activeStyle","backgroundColor","borderTop","TinyFooter","classes","React","useState","AppBar","position","className","Container","exact","to","style","padding","Tab","label","minWidth","margin","float","bullet","display","transform","title","fontSize","pos","marginBottom","NoteCard","props","note","index","Card","CardContent","Typography","color","gutterBottom","variant","component","CardActions","Button","size","Notes","notes","JSON","parse","window","localStorage","getItem","marginLeft","map","key","id","theme","spacing","container","gridTemplateColumns","gridGap","paper","textAlign","palette","text","secondary","height","divider","highlightStyle","fontWeight","containerStyle","justifyContent","alignItems","borderLeft","borderRadius","App","setNotes","refresh","setNoun","Math","floor","random","length","toUpperCase","setUser","save","e","preventDefault","newNote","uuid","noun","user","value","console","log","setValue","useEffect","setItem","stringify","handleChange","event","target","path","render","lineHeight","onClick","TextField","multiline","rows","fullWidth","onChange","autoFocus","marginTop","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2e47afe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let nouns = [\n    'robot',\n    'clock',\n    'book',\n    'laptop',\n    'calendar',\n    'elevator',\n    'escalator',\n    'area',\n    'business',\n    'suitcase',\n    'company',\n    'home',\n    'job',\n    'program',\n    'app',\n    'web app',\n    'mobile app',\n    'room',\n    'course',\n    'airplane',\n    'bathroom',\n    'sport',\n    'camp',\n    'coin',\n    'drawer',\n    'eraser',\n    'ruler',\n    'flag',\n    'fork',\n    'furniture',\n    'handbag',\n    'monitor',\n    'passport',\n    'restaurant',\n    'toy',\n    'tower',\n    'toothpaste',\n    'vehicle',\n    'pair of glasses',\n    'vending machine',\n    'water bottle',\n];\n\nlet users = [\n    'computer science students',\n    'students',\n    'teachers',\n    'the old',\n    'families',\n    'children',\n    'blind people',\n    'people with disabilities',\n    'dancers',\n]\nexport { nouns, users };\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst useStyles = makeStyles({\n    root: {\n        width: 500,\n    },\n    appBar: {\n        top: 'auto',\n        bottom: 0,\n        boxShadow: '0 -10px 40px rgba(0,0,0,0.05)',\n    },\n});\n\nconst Footer = styled.div`\n    height: 6vh;\n    background-color: #fffefb;\n    display: flex;\n    justify-content: flex-end;\n    color: #202020;\n    align-items: center;\n    padding: 5px 3rem 0 3rem;\n    font-weight: 700;\n    z-index: 10;\n    text-decoration: none;\n    top: auto;\n    bottom: 0;\n`;\n\nconst activeStyle = {\n    backgroundColor: '#efeeee',\n    boxShadow: 'none',\n    borderTop: '3px solid #3f50b5',\n};\n\nexport default function TinyFooter() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    return (\n        <AppBar position=\"fixed\" className={classes.appBar}>\n            <Footer>\n                <Container>\n                    <NavLink\n                        exact\n                        to=\"/\"\n                        style={{ padding: '20px 0'}}\n                        activeStyle={activeStyle}\n                    >\n                        <Tab label=\"Creativ 👩‍🎨\" />\n                    </NavLink>\n                    <NavLink\n                        exact\n                        to=\"/notes\"\n                        style={{ padding: '20px 0'}}\n                        activeStyle={activeStyle}\n                    >\n                        <Tab label=\"Notes 📝\" />\n                    </NavLink>\n                </Container>\n            </Footer>\n        </AppBar>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width: '30%',\n    margin: 20,\n    float: 'left'\n  },\n\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function NoteCard(props) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n  const {title, index, note} = props;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n        {title}\n        </Typography>\n        <Typography className={classes.pos} color=\"textSecondary\">\n          adjective\n        </Typography>\n        <Typography variant=\"body2\" component=\"p\">\n          {note}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Learn More</Button>\n      </CardActions>\n    </Card>\n  );\n}","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport NoteCard from './NoteCard';\n\n\nexport default function Notes(props) {\n    // const {notes} = props;\n    const notes = JSON.parse(window.localStorage.getItem('notes'));\n    return (\n        <Container style={{padding: '2rem',}}>\n            <h1 style={{marginLeft: 20}}>Notes</h1>\n            {notes.map((note, index) => (\n                <>\n                    <NoteCard index={index} key={note.id} title={note.title} note={note.note} />\n                </>\n            ))}\n        </Container>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { nouns, users } from './Data';\nimport styled from 'styled-components';\nimport Footer from './Footer';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Container from '@material-ui/core/Container';\nimport uuid from 'uuid/v4';\nimport Notes from './Notes';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: '25ch',\n        },\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    container: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(12, 1fr)',\n        gridGap: theme.spacing(3),\n    },\n    paper: {\n        padding: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n        marginBottom: theme.spacing(1),\n        height: '100%',\n        backgroundColor: '#fafafa',\n    },\n    divider: {\n        margin: theme.spacing(2, 0),\n    },\n}));\nconst highlightStyle = {\n    fontSize: '3rem',\n    fontWeight: '700',\n};\nconst containerStyle={\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '2rem',\n    backgroundColor: '#efeeee',\n    padding: '2rem 2rem',\n    borderLeft: '5px solid #3f50b5',\n    borderRadius: '5px',\n};\n\nfunction App() {\n    const initialNotes = [];\n    const [notes, setNotes] = useState(JSON.parse(window.localStorage.getItem('notes')) || initialNotes);\n    const classes = useStyles();\n    const refresh = () => {\n        setNoun(nouns[Math.floor(Math.random() * nouns.length)].toUpperCase());\n        setUser(users[Math.floor(Math.random() * users.length)]);\n    };\n    const save = (e) => {\n        e.preventDefault();\n        const newNote = { id: uuid(), title: `Design a ${noun} for ${user}`, note: value };\n        // const oldNotes = JSON.parse(window.localStorage.getItem('notes'));\n        setNotes([...notes, newNote]);\n        // window.localStorage.setItem('notes', JSON.stringify(notes));\n        console.log(notes);\n        setValue('');\n        refresh();\n    };\n\n    useEffect(() => {\n        window.localStorage.setItem('notes', JSON.stringify(notes));\n    });\n\n    const [noun, setNoun] = useState(nouns[Math.floor(Math.random() * nouns.length)].toUpperCase());\n    const [user, setUser] = useState(users[Math.floor(Math.random() * users.length)]);\n    const [value, setValue] = React.useState('');\n\n    const handleChange = (event) => {\n        setValue(event.target.value);\n    };\n    return (\n        <div className=\"App\">\n            <HashRouter>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/notes\"\n                        render={() => (\n                            <>\n                                <Notes notes={notes} />\n                            </>\n                        )}\n                    />\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => (\n                            <Container style={{ padding: '2rem' }}>\n                                <div\n                                    style={containerStyle}\n                                >\n                                    <p style={{color: '#666', fontSize: '2rem', lineHeight: '3rem'}}>\n                                        Design a <span style={{ ...highlightStyle, color: '#ab003c' }}> {noun} </span>for\n                                        <span style={{ ...highlightStyle, color: '#2c387e' }}> {user} </span>\n                                    </p>\n                                    <div>\n                                        <Button\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            onClick={refresh}\n                                            style={{\n                                                top: 'auto',\n                                                marginBottom: 0,\n                                            }}\n                                        >\n                                            Get another one\n                                        </Button>\n                                    </div>\n                                </div>\n                                <div style={containerStyle}>\n                                    <TextField\n                                        id=\"filled-multiline-static\"\n                                        label=\"Notes here...\"\n                                        multiline\n                                        rows={15}\n                                        // variant=\"filled\"\n                                        fullWidth\n                                        onChange={handleChange}\n                                        value={value}\n                                        autoFocus\n                                    />\n                                    <div\n                                        style={{\n                                            marginTop: 20,\n                                            textAlign: 'left',\n                                        }}\n                                    >\n                                        <Button variant=\"contained\" color=\"primary\" onClick={save}>\n                                            Save\n                                        </Button>\n                                    </div>\n                                </div>\n                            </Container>\n                        )}\n                    />\n                </Switch>\n                <Footer />\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}